/* * ATM Example system - file LogPanel.java   * * copyright (c) 2001 - Russell C. Bjork * */ package presentation;import java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import storage.Database;/** The GUI panel that displays the ATM's internal log */class DBPanel extends Panel{    /** Constructor     *     *  @param gui the the overall GUI     */         DBPanel(final GUI gui)    {    	        GridBagLayout logLayout = new GridBagLayout();        setLayout(logLayout);        setFont(new Font("Monospaced", Font.PLAIN, 14));                Label logPanelLabel = new Label("정보저장", Label.CENTER);        add(logPanelLabel);        GridBagConstraints constraints =             GUI.makeConstraints(0, 0, 1, 1, GridBagConstraints.NONE);        constraints.weighty = 0;        logLayout.setConstraints(logPanelLabel, constraints);                     Panel DBPanel = new Panel();        DBPanel.setLayout(new FlowLayout());        DBNameField = new TextField(30);                DBPinField = new TextField(30);                DBNameField.setFont(new Font("Monospaced", Font.PLAIN, 12));        DBNameField.setEditable(true);                Label NameLabel = new Label("이름 : ", Label.CENTER);        Label PinLabel = new Label("PIN : ", Label.CENTER);                add(DBNameField);                add(DBPinField);        DBPanel.add(NameLabel);        DBPanel.add(DBNameField);        DBPanel.add(PinLabel);        DBPanel.add(DBPinField);        add(DBPanel);        constraints = GUI.makeConstraints(3, 0, 2, 2, GridBagConstraints.NONE);        constraints.weighty = 0;        logLayout.setConstraints(DBPanel, constraints);                Panel logButtonPanel = new Panel();        logButtonPanel.setLayout(new FlowLayout());                Button clearLogButton = new Button("정보저장");        clearLogButton.addActionListener(new ActionListener() {            public void actionPerformed(ActionEvent e)            {            	int number =Simulation.getInstance().getSimulatedBank().getPIN().size()+1;            	System.out.println(DBNameField.getText());            	String sql="INSERT INTO Atm " + "VALUES ('"            			  + DBNameField.getText() + "', '"            			  + number + "', '"            			  + DBPinField.getText() + "'"            			  + ")" ;            	Statement stmt;				try {					stmt = Database.getInstance().getConnection().createStatement();					int updateCount = stmt.executeUpdate(sql) ;	                stmt.close() ;				} catch (SQLException e1) {					// TODO Auto-generated catch block					e1.printStackTrace();				}								logPanelLabel.setText("저장완료");                              }        });        logButtonPanel.add(clearLogButton);                Button dismissLogButton = new Button("현재 창 닫기");        dismissLogButton.addActionListener(new ActionListener() {            public void actionPerformed(ActionEvent e)            {                gui.showCard("ATM");            }        });                logButtonPanel.add(dismissLogButton);        add(logButtonPanel);        constraints = GUI.makeConstraints(6, 0, 2, 2, GridBagConstraints.NONE);        constraints.weighty = 0;        logLayout.setConstraints(logButtonPanel, constraints);                Panel SearchPanel = new Panel();        SearchPanel.setLayout(new FlowLayout());        DBCardField = new TextField();        Label CardLabel = new Label("Card 번호", Label.CENTER);        TextField SearchLabel = new TextField();                Button searchButton = new Button("정보조회");        searchButton.addActionListener(new ActionListener() {            public void actionPerformed(ActionEvent e)            {            	String sql=null;				try {Statement stmt	            	= Database.getInstance().getConnection().createStatement() ;                ResultSet rset;					rset = stmt.executeQuery("SELECT * FROM Atm WHERE Card='"							    + Integer.parseInt(DBCardField.getText()) + "'");					 while (rset.next()) {		                  sql = "이름:"+rset.getString(1)+"/ 카드번호:"+rset.getInt(2)+"/ PIN번호:"+rset.getInt(3);	                  }					 DBNameField.setText(sql);				} catch (NumberFormatException e1) {					// TODO Auto-generated catch block					e1.printStackTrace();				} catch (SQLException e1) {					// TODO Auto-generated catch block					e1.printStackTrace();				}                             }        });        SearchPanel.add(CardLabel);        SearchPanel.add(DBCardField);        SearchPanel.add(searchButton);                       add(SearchPanel);        constraints = GUI.makeConstraints(9, 0, 2, 2, GridBagConstraints.NONE);        constraints.weighty = 0;        logLayout.setConstraints(SearchPanel, constraints);            }               /** Area into which the log is to be printed     */    private TextField DBNameField;    private TextField DBCardField;    private TextField DBPinField;}                    